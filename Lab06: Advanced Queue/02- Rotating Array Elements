from collections import deque

class CircularQueueRotator:
    def __init__(self, array):
        self.queue = deque(array)

    def rotate(self, k):
        if len(self.queue) == 0:
            print("The queue is empty. No rotations can be performed.")
            return
        if len(self.queue) == 1:
            print("The queue has only one element. No rotations needed.")
            return
        
        k = k % len(self.queue)
        for _ in range(k):
            last = self.queue.pop()
            self.queue.appendleft(last)

    def get_rotated_array(self):
        return list(self.queue)


# Test Case 3
arr = [1, 2, 3, 4]
k = 4
expected_output = [1, 2, 3, 4]

rotator = CircularQueueRotator(arr)
rotator.rotate(k)
result = rotator.get_rotated_array()

print("Test Case 3:")
print("Expected:", expected_output)
print("Result:  ", result)
print("Test Passed" if result == expected_output else "Test Failed")
